diff --git a/dist/components/Autocomplete/Autocomplete.svelte b/dist/components/Autocomplete/Autocomplete.svelte
index 75b8b949c1e26d9c7b78ff01fb99140ce4ac983e..21ac8498fbbe15999fe5585031d580cc1b08113c 100644
--- a/dist/components/Autocomplete/Autocomplete.svelte
+++ b/dist/components/Autocomplete/Autocomplete.svelte
@@ -74,14 +74,14 @@ $:
 	{#if optionsFiltered.length > 0}
 		<nav class="autocomplete-nav {classesNav}">
 			<ul class="autocomplete-list {classesList}">
-				{#each optionsFiltered.slice(0, sliceLimit) as option (option)}
+				{#each sliceLimit ? optionsFiltered.slice(0, sliceLimit) : optionsFiltered as option (option)}
 					<li
 						class="autocomplete-item {classesItem}"
 						in:dynamicTransition|local={{ transition: transitionIn, params: transitionInParams, enabled: transitions }}
 						out:dynamicTransition|local={{ transition: transitionOut, params: transitionOutParams, enabled: transitions }}
 					>
 						<button class="autocomplete-button {classesButton}" type="button" on:click={() => onSelection(option)} on:click on:keypress>
-							{@html option.label}
+							{option.label}
 						</button>
 					</li>
 				{/each}
diff --git a/dist/components/Autocomplete/Autocomplete.svelte.d.ts b/dist/components/Autocomplete/Autocomplete.svelte.d.ts
index e4f3b4dd9ae4983bba4c7c84fa807ea68d03d07e..a8cc2e6cd4051d866ad56675ba51acaa25e190fe 100644
--- a/dist/components/Autocomplete/Autocomplete.svelte.d.ts
+++ b/dist/components/Autocomplete/Autocomplete.svelte.d.ts
@@ -1,16 +1,16 @@
-import { SvelteComponentTyped } from "svelte";
+import { SvelteComponent } from "svelte";
 import { slide } from 'svelte/transition';
 import { type Transition, type TransitionParams } from '../../index.js';
-type SlideTransition = typeof slide;
 import type { AutocompleteOption } from './types.js';
-declare class __sveltets_Render<TransitionIn extends Transition = SlideTransition, TransitionOut extends Transition = SlideTransition> {
+type SlideTransition = typeof slide;
+declare class __sveltets_Render<Value, TransitionIn extends Transition = SlideTransition, TransitionOut extends Transition = SlideTransition> {
     props(): {
         [x: string]: any;
-        input?: unknown;
-        options?: AutocompleteOption[] | undefined;
+        input?: Value;
+        options?: AutocompleteOption<Value>[] | undefined;
         limit?: number | undefined;
-        allowlist?: unknown[] | undefined;
-        denylist?: unknown[] | undefined;
+        allowlist?: Value[] | undefined;
+        denylist?: Value[] | undefined;
         emptyState?: string | undefined;
         regionNav?: string | undefined;
         regionList?: string | undefined;
@@ -26,15 +26,16 @@ declare class __sveltets_Render<TransitionIn extends Transition = SlideTransitio
     events(): {
         click: MouseEvent;
         keypress: KeyboardEvent;
-        selection: CustomEvent<AutocompleteOption>;
+        selection: CustomEvent<AutocompleteOption<Value>>;
     } & {
         [evt: string]: CustomEvent<any>;
     };
     slots(): {};
 }
-export type AutocompleteProps<TransitionIn extends Transition = SlideTransition, TransitionOut extends Transition = SlideTransition> = ReturnType<__sveltets_Render<TransitionIn, TransitionOut>['props']>;
-export type AutocompleteEvents<TransitionIn extends Transition = SlideTransition, TransitionOut extends Transition = SlideTransition> = ReturnType<__sveltets_Render<TransitionIn, TransitionOut>['events']>;
-export type AutocompleteSlots<TransitionIn extends Transition = SlideTransition, TransitionOut extends Transition = SlideTransition> = ReturnType<__sveltets_Render<TransitionIn, TransitionOut>['slots']>;
-export default class Autocomplete<TransitionIn extends Transition = SlideTransition, TransitionOut extends Transition = SlideTransition> extends SvelteComponentTyped<AutocompleteProps<TransitionIn, TransitionOut>, AutocompleteEvents<TransitionIn, TransitionOut>, AutocompleteSlots<TransitionIn, TransitionOut>> {
+export type AutocompleteProps<Value, TransitionIn extends Transition = SlideTransition, TransitionOut extends Transition = SlideTransition> = ReturnType<__sveltets_Render<Value, TransitionIn, TransitionOut>['props']>;
+export type AutocompleteEvents<Value, TransitionIn extends Transition = SlideTransition, TransitionOut extends Transition = SlideTransition> = ReturnType<__sveltets_Render<Value, TransitionIn, TransitionOut>['events']>;
+export type AutocompleteSlots<Value, TransitionIn extends Transition = SlideTransition, TransitionOut extends Transition = SlideTransition> = ReturnType<__sveltets_Render<Value, TransitionIn, TransitionOut>['slots']>;
+export default class Autocomplete<Value, TransitionIn extends Transition = SlideTransition, TransitionOut extends Transition = SlideTransition> extends SvelteComponent<AutocompleteProps<Value, TransitionIn, TransitionOut>, AutocompleteEvents<Value, TransitionIn, TransitionOut>, AutocompleteSlots<Value, TransitionIn, TransitionOut>> {
 }
-export {};
+export { };
+
diff --git a/dist/components/Autocomplete/types.d.ts b/dist/components/Autocomplete/types.d.ts
index f3c35163bc4d6c9b20a7fd2e29a0b8b98cdf3f25..14649c466c40b2d74aec3428ae4554dd0109768c 100644
--- a/dist/components/Autocomplete/types.d.ts
+++ b/dist/components/Autocomplete/types.d.ts
@@ -1,8 +1,8 @@
-export interface AutocompleteOption {
-    /** provide a unique display label per option. Supports HTML. */
+export interface AutocompleteOption<Value = unknown> {
+    /** Provide a unique display label per option. */
     label: string;
     /** Provide a unique option value. */
-    value: unknown;
+    value: Value;
     /** Provide a comma separated list of keywords. */
     keywords?: any;
     /** Pass arbitrary data per option. */
